name: CI/CD

on:
  push:
    branches: ["main", "develop"]

permissions:
  contents: read

jobs:
  ci-build:
    name: üîß CI - Build & Docker Push
    runs-on: ubuntu-latest

    steps:
      - name: Î†àÌè¨ÏßÄÌÜ†Î¶¨ Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4

      - name: JDK 17 ÏÑ∏ÌåÖ
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle ÏÑ∏ÌåÖ
        uses: gradle/actions/setup-gradle@v4

      - name: application.yml ÏÉùÏÑ±
        run: |
          sudo mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" | base64 --decode > src/main/resources/application.yml

      - name: gradlew ÎπåÎìú
        run: |
          chmod +x gradlew
          ./gradlew build -x test

      - name: ÎèÑÏª§ÌóàÎ∏å Î°úÍ∑∏Ïù∏
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_ID }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" = "main" ]; then
            docker build -t ${{ secrets.DOCKERHUB_ID }}/animal-app:latest .
          else
            docker build -t ${{ secrets.DOCKERHUB_ID }}/animal-app-develop:latest .
          fi

      - name: ÎèÑÏª§ Ïù¥ÎØ∏ÏßÄ Ìë∏Ïãú
        run: |
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" = "main" ]; then
            docker push ${{ secrets.DOCKERHUB_ID }}/animal-app:latest
          else
            docker push ${{ secrets.DOCKERHUB_ID }}/animal-app-develop:latest
          fi

  # ================================
  # üöÄ CD: GCP VMÏóê Î∞∞Ìè¨
  # ================================
  cd-deploy:
    name: üöÄ CD - Deploy to GCP VM
    runs-on: ubuntu-latest
    needs: ci-build

    steps:
      - name: Î†àÌè¨ÏßÄÌÜ†Î¶¨ Ï≤¥ÌÅ¨ÏïÑÏõÉ
        uses: actions/checkout@v4

      # - name: .env ÌååÏùº ÏÉùÏÑ±
      #   run: |
      #     echo "NAVER_CLIENT_ID=${{ secrets.NAVER_CLIENT_ID }}" >> .env
      #     echo "NAVER_CLIENT_SECRET=${{ secrets.NAVER_CLIENT_SECRET }}" >> .env
      #     echo "NAVER_REDIRECT_URI=${{ secrets.NAVER_REDIRECT_URI }}" >> .env
      #     echo "KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }}" >> .env
      #     echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> .env

#      - name: .env ÌååÏùº GCPÏóê Î≥µÏÇ¨
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.GCP_HOST }}
#          username: ${{ secrets.GCP_USERNAME }}
#          key: ${{ secrets.GCP_PRIVATEKEY }}
#          port: 22
#          source: ".env"
#          target: "/home/animal"
#          overwrite: true
#          debug: true

#      - name: docker-compose.yml GCPÏóê Î≥µÏÇ¨
#        uses: appleboy/scp-action@v0.1.7
#        with:
#          host: ${{ secrets.GCP_HOST }}
#          username: ${{ secrets.GCP_USERNAME }}
#          key: ${{ secrets.GCP_PRIVATEKEY }}
#          port: 22
#          source: "docker-compose.yml"
#          target: "/home/${{secrets.GCP_USERNAME}}/animal"
#          overwrite: true
#          strip_components: 1
#          debug: true

      - name: docker-compose.yml GCPÏóê Î≥µÏÇ¨ + ÏÉÅÌÉú ÌôïÏù∏
        run: |
          echo "${{ secrets.GCP_PRIVATEKEY }}" > gcp_key.pem
          chmod 600 gcp_key.pem
          
          BRANCH_NAME=${GITHUB_REF##*/}
          if [ "$BRANCH_NAME" = "main" ]; then
            echo "üëâ main Î∏åÎûúÏπò - 8080ÏúºÎ°ú ÏÑ§Ï†ï"
            scp -i gcp_key.pem -o StrictHostKeyChecking=no docker-compose.main.yml ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }}:/home/${{ secrets.GCP_USERNAME }}/animal/docker-compose.yml
          elif [ "$BRANCH_NAME" = "develop" ]; then
            echo "üëâ develop Î∏åÎûúÏπò - 8081Î°ú ÏÑ§Ï†ï"
            scp -i gcp_key.pem -o StrictHostKeyChecking=no docker-compose.develop.yml ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }}:/home/${{ secrets.GCP_USERNAME }}/animal/docker-compose.yml
          fi
          
          echo "üîç Î≥µÏÇ¨Îêú docker-compose.yml ÌôïÏù∏"
          ssh -i gcp_key.pem -o StrictHostKeyChecking=no ${{ secrets.GCP_USERNAME }}@${{ secrets.GCP_HOST }} "cat /home/${{ secrets.GCP_USERNAME }}/animal/docker-compose.yml"
          
          rm gcp_key.pem

      - name: GCP ÏÑúÎ≤ÑÏóê SSH Ï†ëÏÜçÌïòÏó¨ Î∞∞Ìè¨
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_PRIVATEKEY }}
          port: 22
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_ID }} --password-stdin ${{ secrets.DOCKERHUB_TOKEN }}
            BRANCH_NAME=${GITHUB_REF##*/}
            if [ "$BRANCH_NAME" = "main" ]; then
            sudo docker pull ${{ secrets.DOCKERHUB_ID }}/animal-app:latest
            else
            sudo docker pull ${{ secrets.DOCKERHUB_ID }}/animal-app-develop:latest
            fi
            cd /home/${{secrets.GCP_USERNAME}}/animal
            pwd
            sudo docker compose down || true
            sudo docker compose up -d --remove-orphans
            sudo docker image prune -f